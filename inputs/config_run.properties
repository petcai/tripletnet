# Run type: train or run
runType = run

# To launch this example: java -jar <path to TripletNetwork-1.0.jar> <path to this file>

# Path to obtain the network weights
pathInputWeights = /Users/harold/Code/TripletNetwork/runs/input/weights

# Boolean (true/false) defining whether to initialize from input weights
flagInitFromInputWeights = true

# Size of batches
batchSize = 50

# Path of the folder with the MNIST training images
pathMnist = /Users/harold/Code/TripletNetwork/runs/mnist

# -------- Train mode only 
# Path to save the network weights
pathOutputWeights = /Users/harold/Code/TripletNetwork/runs/output

# Path to log the weights at regular intervals
pathWeightsLog = /Users/harold/Code/TripletNetwork/runs/logs

# Logging frequency, in terms of batches
weightsLoggingFrequency = 1000

# Number of gradient descent iterations
numDescentIterations = 1

# Logging frequency of the gradient descent
descentLoggingFrequency = 2

# Number of batches iterations
numBatches = 6000

# Regularization
learningRate = 0.5
regularizationCoeff = 1e-3
momentum = 0.9

# -------- Test mode only 
# Path to the image file to feed to the network 
pathInputImages = /Users/harold/Code/TripletNetwork/runs/input/images/test_images.txt

# Path to save the embedding calculated by the network
pathOutputImages = /Users/harold/Code/TripletNetwork/runs/output/test_images_embeddings.txt
